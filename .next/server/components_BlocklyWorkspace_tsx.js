"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_BlocklyWorkspace_tsx";
exports.ids = ["components_BlocklyWorkspace_tsx"];
exports.modules = {

/***/ "./components/BlocklyWorkspace.tsx":
/*!*****************************************!*\
  !*** ./components/BlocklyWorkspace.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var blockly__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! blockly */ \"blockly\");\n/* harmony import */ var blockly__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(blockly__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var blockly_javascript__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! blockly/javascript */ \"blockly/javascript\");\n/* harmony import */ var blockly_javascript__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(blockly_javascript__WEBPACK_IMPORTED_MODULE_3__);\n// client/components/BlocklyWorkspace.tsx\n\n\n\n\n// Replace with your actual WebSocket server URL if deployed.\nconst ws = new WebSocket('ws://localhost:8080');\n// In a real application these would come from your authentication system.\nconst currentUserId = 'alice';\nconst currentUserRole = 'Master'; // 'Master' | 'Owner' | 'Member' | 'Viewer'\nconst BlocklyWorkspace = ()=>{\n    const blocklyDiv = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const workspaceRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Helper: send buffered events from localStorage when online.\n    const syncPendingEvents = ()=>{\n        const pending = localStorage.getItem('pendingEvents');\n        if (pending && ws.readyState === WebSocket.OPEN) {\n            const pendingEvents = JSON.parse(pending);\n            pendingEvents.forEach((evt)=>ws.send(evt));\n            localStorage.removeItem('pendingEvents');\n            console.log('Pending events synced');\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BlocklyWorkspace.useEffect\": ()=>{\n            if (blocklyDiv.current) {\n                workspaceRef.current = blockly__WEBPACK_IMPORTED_MODULE_2___default().inject(blocklyDiv.current, {\n                    toolbox: `<xml>\n          <block type=\"controls_if\"></block>\n          <block type=\"logic_compare\"></block>\n          <!-- Add more blocks as needed -->\n        </xml>`\n                });\n                // When WebSocket opens, send join message and sync pending events.\n                ws.onopen = ({\n                    \"BlocklyWorkspace.useEffect\": ()=>{\n                        ws.send(JSON.stringify({\n                            join: 'project123',\n                            user: currentUserId,\n                            token: 'YOUR_TOKEN'\n                        }));\n                        syncPendingEvents();\n                    }\n                })[\"BlocklyWorkspace.useEffect\"];\n                // Listen for changes in the Blockly workspace.\n                workspaceRef.current.addChangeListener({\n                    \"BlocklyWorkspace.useEffect\": (event)=>{\n                        if (event.isUiEvent) return; // Skip UI-only events.\n                        const eventJson = event.toJson();\n                        const payload = JSON.stringify({\n                            event: eventJson,\n                            user: currentUserId,\n                            role: currentUserRole\n                        });\n                        if (navigator.onLine && ws.readyState === WebSocket.OPEN) {\n                            ws.send(payload);\n                        } else {\n                            // Buffer event locally when offline.\n                            const pending = localStorage.getItem('pendingEvents');\n                            const pendingEvents = pending ? JSON.parse(pending) : [];\n                            pendingEvents.push(payload);\n                            localStorage.setItem('pendingEvents', JSON.stringify(pendingEvents));\n                            console.log('Offline: event buffered');\n                        }\n                    }\n                }[\"BlocklyWorkspace.useEffect\"]);\n            }\n            // Listen for incoming collaboration events.\n            ws.onmessage = ({\n                \"BlocklyWorkspace.useEffect\": (message)=>{\n                    let data;\n                    try {\n                        data = JSON.parse(message.data);\n                    } catch (e) {\n                        console.error('Invalid message:', message.data);\n                        return;\n                    }\n                    if (data.event && workspaceRef.current) {\n                        try {\n                            const evt = blockly__WEBPACK_IMPORTED_MODULE_2___default().Events.fromJson(data.event, workspaceRef.current);\n                            evt.run(true);\n                        } catch (err) {\n                            console.error('Error applying event:', err);\n                        }\n                    }\n                }\n            })[\"BlocklyWorkspace.useEffect\"];\n            const handleOnline = {\n                \"BlocklyWorkspace.useEffect.handleOnline\": ()=>{\n                    if (ws.readyState === WebSocket.OPEN) {\n                        syncPendingEvents();\n                    }\n                }\n            }[\"BlocklyWorkspace.useEffect.handleOnline\"];\n            window.addEventListener('online', handleOnline);\n            return ({\n                \"BlocklyWorkspace.useEffect\": ()=>{\n                    ws.close();\n                    window.removeEventListener('online', handleOnline);\n                }\n            })[\"BlocklyWorkspace.useEffect\"];\n        }\n    }[\"BlocklyWorkspace.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: blocklyDiv,\n        style: {\n            height: '100%',\n            width: '100%'\n        }\n    }, void 0, false, {\n        fileName: \"/Users/akeilsmith/Desktop/Variablity Lab/collaborative-blockly/client/components/BlocklyWorkspace.tsx\",\n        lineNumber: 93,\n        columnNumber: 10\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BlocklyWorkspace);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/BlocklyWorkspace.tsx\n");

/***/ })

};
;